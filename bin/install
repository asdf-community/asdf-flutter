#!/usr/bin/env bash

currentDir="$(dirname $0)"

source "${currentDir}/jq-downloader"
source "${currentDir}/utils.sh"

install() {

  if [ "${ASDF_INSTALL_TYPE}" == "ref" ]; then
    echo "Only binary versions are supported"
    exit 1
  fi
  
  local urlPrefix="${FLUTTER_STORAGE_BASE_URL}/flutter_infra_release/releases"
  
  local versionListUrl="${FLUTTER_STORAGE_BASE_URL}/flutter_infra_release/releases/releases_macos.json"
  
  if [ "$(uname -s)" == "Linux" ]; then
    versionListUrl="${FLUTTER_STORAGE_BASE_URL}/flutter_infra_release/releases/releases_linux.json"
  fi
  
  local escapedInstallVersion=$(echo $ASDF_INSTALL_VERSION | sed 's/\./\\\./g;s/\+/\\\+/g')
  local arch="x64"
  if [ "$(uname -s)" == "Darwin" ] && [ "$(uname -m)" == "arm64" ]; then
    arch="arm64"
  fi

  local filePath=$(curl -sL "${versionListUrl}" | "${JQ_BIN}" -r --arg VERSION "${escapedInstallVersion}" --arg ARCH "${arch}" '.releases[] | select((.version + "-" + .channel) | test("^v?" + $VERSION)) | select((has("dart_sdk_arch") | not) or (.dart_sdk_arch == $ARCH)) | .archive')

  if [ -z "${filePath}" ]; then
    echo "Cannot find the download url for the version: ${ASDF_INSTALL_VERSION}"
    exit 1
  fi

  local url="${urlPrefix}/${filePath}"
  local fileName="${url##*/}"

  mkdir -p "${ASDF_INSTALL_PATH}"
  cd "${ASDF_INSTALL_PATH}" || exit 1
  curl -OJL "${url}"
  tar xf "${fileName}" --strip 1
  rm -f "${fileName}"
}

download_jq_if_not_exists
install
